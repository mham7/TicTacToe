@page "/game"
@using TicTacToe.Services.Interfaces
@inject IGamService _game
@inject IPlayerService _player
@inject ICacheService _cache
@rendermode InteractiveServer



<PageTitle>Tic Tac Toe</PageTitle>
<h1>Blazing Tic Tac Toe</h1>

@if (!_game.isGameStarted())
{
    <div>
        <label for="rows">Enter Size:</label>
        <input type="number" id="rows" @bind="rows" min="3" max="7" />

        <button @onclick="Start">Start Game</button>
    </div>
}

@if (_game.isGameStarted())
{
     <h6>Blazing Tic Tac Toe</h6>
    <div class="grid">
        @for (int i = 0; i < rows; i++)
        {
            int row = i;
            <div class="row">
                @for (int j = 0; j < rows; j++)
                {
                  
                    int col = j;
                    int index = row * rows + col;
                    <div class="square" " @onclick="() => IncrementCount(row,col)">
                        <h5 class="char">@array[row,col]"</h5>
                    </div>
                }
            </div>
        }
    </div>
}
@code {
    int rows;
    char[,] array;
    protected override void OnInitialized()
    {
        array = new char[rows,rows]; 
        for (int i = 0; i < rows; i++)
        {
            for (int j = 0; j < rows; j++)
            {
                array[i, j] = '.';
            }
        }
    }
    private void IncrementCount(int row,int col)
    {

        array[row, col] = _player.GetMove();

        _player.SwitchPlayer();
    }
    private void Start()
    {

        if(rows>2){
            OnInitialized();

            _game.StartGame(rows);
        }
        else
        {
            
        }

    }
   
   
    
    
}
